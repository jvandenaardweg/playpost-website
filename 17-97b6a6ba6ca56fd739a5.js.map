{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/core-js/modules/_typed.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_to-index.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_array-fill.js","webpack:///./node_modules/howler/dist/howler.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.typed.uint8-array.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_typed-array.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_typed-buffer.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_array-copy-within.js"],"names":["Typed","global","__webpack_require__","hide","uid","TYPED","VIEW","ABV","ArrayBuffer","DataView","CONSTR","i","TypedArrayConstructors","split","prototype","module","exports","toInteger","toLength","it","undefined","number","length","RangeError","toObject","toAbsoluteIndex","value","O","this","aLen","arguments","index","end","endPos","HowlerGlobal","init","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","document","removeEventListener","_emit","addEventListener","_obtainHtml5Audio","pop","testPlay","play","Promise","then","catch","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","_resumeAfterSuspend","Howl","o","src","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","_xhrWithCredentials","xhrWithCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","stop","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","_clearSound","_interval","args","indexOf","apply","fade","from","to","len","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","min","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","splice","remCache","cache","on","events","off","isId","keys","Object","Array","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","xhr","XMLHttpRequest","open","withCredentials","responseType","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","standalone","__WEBPACK_AMD_DEFINE_RESULT__","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","byteOffset","LIBRARY","fails","$export","$typed","$buffer","anInstance","propertyDesc","redefineAll","toIndex","toPrimitive","has","classof","isObject","isArrayIter","getPrototypeOf","gOPN","f","getIterFn","wks","createArrayMethod","createArrayIncludes","speciesConstructor","ArrayIterators","Iterators","$iterDetect","setSpecies","arrayFill","arrayCopyWithin","$DP","$GOPD","dP","gOPD","TypeError","ArrayProto","$ArrayBuffer","$DataView","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayFind","arrayFindIndex","arrayIncludes","arrayIndexOf","arrayValues","values","arrayKeys","arrayEntries","entries","arrayLastIndexOf","lastIndexOf","arrayReduce","reduce","arrayReduceRight","reduceRight","arrayJoin","join","arraySort","sort","arraySlice","arrayToString","toString","arrayToLocaleString","toLocaleString","ITERATOR","TAG","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","TYPED_ARRAY","$map","allocate","LITTLE_ENDIAN","Uint16Array","FORCED_SET","set","toOffset","BYTES","offset","validate","C","speciesFromList","list","fromList","result","addGetter","key","get","_d","$from","step","iterator","mapfn","mapping","iterFn","next","done","$of","TO_LOCALE_BUG","$toLocaleString","proto","copyWithin","target","every","callbackfn","fill","filter","find","predicate","findIndex","forEach","searchElement","includes","separator","map","reverse","middle","floor","some","comparefn","subarray","begin","$begin","BYTES_PER_ELEMENT","$slice","$set","arrayLike","$iterators","isTAIndex","String","$getDesc","$setDesc","desc","configurable","writable","enumerable","S","F","getOwnPropertyDescriptor","defineProperty","$TypedArrayPrototype$","constructor","KEY","wrapper","CLAMPED","NAME","GETTER","SETTER","TypedArray","Base","TAC","FORCED","TypedArrayPrototype","addElement","that","v","getter","setter","$offset","$length","byteLength","klass","$len","b","l","iter","Function","concat","$nativeIterator","CORRECT_ITER_NAME","name","$iterator","G","W","of","P","DESCRIPTORS","setToStringTag","PROTOTYPE","WRONG_INDEX","BaseBuffer","pow","log","LN2","$BUFFER","$LENGTH","$OFFSET","packIEEE754","mLen","nBytes","m","c","eLen","eMax","eBias","rt","s","unpackIEEE754","nBits","NaN","unpackI32","bytes","packI8","packI16","packI32","packF64","packF32","view","isLittleEndian","intIndex","store","_b","pack","conversion","ArrayBufferProto","$setInt8","setInt8","getInt8","setUint8","bufferLength","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64","count","inc"],"mappings":"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","file":"17-97b6a6ba6ca56fd739a5.js","sourcesContent":["var global = require('./_global');\nvar hide = require('./_hide');\nvar uid = require('./_uid');\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n","// https://tc39.github.io/ecma262/#sec-toindex\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","/*!\n *  howler.js v2.1.2\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        for (var i=0; i<self.html5PoolSize; i++) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended. \n        // If there is, play that sound. If not, continue as usual.  \n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = loop;\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = parseFloat(from);\n      to = parseFloat(to);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Make sure the volume is in the right bounds.\n        vol = Math.max(0, vol);\n        vol = Math.min(1, vol);\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.withCredentials = self._xhrWithCredentials;\n      xhr.responseType = 'arraybuffer';\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : 1, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.1.2\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","'use strict';\nif (require('./_descriptors')) {\n  var LIBRARY = require('./_library');\n  var global = require('./_global');\n  var fails = require('./_fails');\n  var $export = require('./_export');\n  var $typed = require('./_typed');\n  var $buffer = require('./_typed-buffer');\n  var ctx = require('./_ctx');\n  var anInstance = require('./_an-instance');\n  var propertyDesc = require('./_property-desc');\n  var hide = require('./_hide');\n  var redefineAll = require('./_redefine-all');\n  var toInteger = require('./_to-integer');\n  var toLength = require('./_to-length');\n  var toIndex = require('./_to-index');\n  var toAbsoluteIndex = require('./_to-absolute-index');\n  var toPrimitive = require('./_to-primitive');\n  var has = require('./_has');\n  var classof = require('./_classof');\n  var isObject = require('./_is-object');\n  var toObject = require('./_to-object');\n  var isArrayIter = require('./_is-array-iter');\n  var create = require('./_object-create');\n  var getPrototypeOf = require('./_object-gpo');\n  var gOPN = require('./_object-gopn').f;\n  var getIterFn = require('./core.get-iterator-method');\n  var uid = require('./_uid');\n  var wks = require('./_wks');\n  var createArrayMethod = require('./_array-methods');\n  var createArrayIncludes = require('./_array-includes');\n  var speciesConstructor = require('./_species-constructor');\n  var ArrayIterators = require('./es6.array.iterator');\n  var Iterators = require('./_iterators');\n  var $iterDetect = require('./_iter-detect');\n  var setSpecies = require('./_set-species');\n  var arrayFill = require('./_array-fill');\n  var arrayCopyWithin = require('./_array-copy-within');\n  var $DP = require('./_object-dp');\n  var $GOPD = require('./_object-gopd');\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function () {\n    // eslint-disable-next-line no-undef\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n\n  var toOffset = function (it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function (it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function (C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function (O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function (C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function (it, key, internal) {\n    dP(it, key, { get: function () { return this._d[internal]; } });\n  };\n\n  var $from = function from(source /* , mapfn, thisArg */) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      } O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/* ...items */) {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /* , end */) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /* , thisArg */) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /* , thisArg */) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /* , thisArg */) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /* , thisArg */) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /* , thisArg */) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /* , fromIndex */) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /* , fromIndex */) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) { // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /* , thisArg */) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      } return that;\n    },\n    some: function some(callbackfn /* , thisArg */) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /* , offset */) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function (target, key) {\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ) {\n      target[key] = desc.value;\n      return target;\n    } return dP(target, key, desc);\n  };\n\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n\n  if (fails(function () { arrayToString.call({}); })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function () { /* noop */ },\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function () { return this[TYPED_ARRAY]; }\n  });\n\n  // eslint-disable-next-line max-statements\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function (that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function (that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function (that, index) {\n      dP(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1); // eslint-disable-line no-new\n    }) || !$iterDetect(function (iter) {\n      new TypedArray(); // eslint-disable-line no-new\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(1.5); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator\n      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function () { return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES\n    });\n\n    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {\n      from: $from,\n      of: $of\n    });\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () { /* empty */ };\n","'use strict';\nvar global = require('./_global');\nvar DESCRIPTORS = require('./_descriptors');\nvar LIBRARY = require('./_library');\nvar $typed = require('./_typed');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar fails = require('./_fails');\nvar anInstance = require('./_an-instance');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar toIndex = require('./_to-index');\nvar gOPN = require('./_object-gopn').f;\nvar dP = require('./_object-dp').f;\nvar arrayFill = require('./_array-fill');\nvar setToStringTag = require('./_set-to-string-tag');\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\n// eslint-disable-next-line no-shadow-restricted-names\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = new Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  // eslint-disable-next-line no-self-compare\n  if (value != value || value === Infinity) {\n    // eslint-disable-next-line no-self-compare\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\n\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\n\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });\n}\n\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n}\n\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(new Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1); // eslint-disable-line no-new\n  }) || fails(function () {\n    new $ArrayBuffer(); // eslint-disable-line no-new\n    new $ArrayBuffer(1.5); // eslint-disable-line no-new\n    new $ArrayBuffer(NaN); // eslint-disable-line no-new\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n"],"sourceRoot":""}